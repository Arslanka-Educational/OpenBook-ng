services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: core-catalog-master
      POSTGRES_USER: core-catalog-owner
      POSTGRES_PASSWORD: core-catalog-owner
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5436"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5436/core-catalog-master
      SPRING_DATASOURCE_USERNAME: core-catalog-owner
      SPRING_DATASOURCE_PASSWORD: core-catalog-owner
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka
    ports:
      - "8087:8081"
    networks:
      - kafka-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper
    networks:
      - kafka-net

volumes:
  postgres_data:

networks:
  kafka-net:
    external: true

